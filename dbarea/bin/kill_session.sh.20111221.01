#!/bin/ksh

#set -x

usage() {
  echo ""
  echo "USAGE:"
  echo "      `basename $0` [ORACLE_SID]"
  echo ""
}
if [ $# -eq 0 ]
then
  # see if only one oracle database is running in this box.
  _cnt=`ps -ef | grep smon | grep -v "grep" | grep -v "+ASM"|wc -l`
  if [ $_cnt -eq 1 ]
  then
    _sid=`ps -ef | grep smon | grep -v "grep" | grep -v "+ASM" | cut -c58-`
#echo "_sid = $_sid"
    export ORACLE_SID=$_sid
  else
    echo "More than 1 sid found"
    echo "ERROR(1) - No valid ORACLE_SID has been passed. More than one ORACLE_SID running in `hostname`." | /bin/mailx -s "ERROR - Terminate inactive session on `hostname`" cwopsdba@cisco.com
    usage
    exit 1
  fi
elif [ $# -eq 1 ]
then
  # check if the passed sid is a vaild one
  _cnt=`ps -ef | grep ora_smon_$1| grep -v "grep" | wc -l`
#echo "ps count = $_cnt"
  if [ $_cnt -ne 1 ]
  then
    echo "Invalid ORACLE_SID"
    echo "ERROR(2) - The argument passed ($1) is not a valid ORACLE_SID on `hostname`." | /bin/mailx -s "ERROR - Terminate inactive session on `hostname`" cwopsdba@cisco.com 
    ###echo "ERROR(2) - The argument passed ($1) is not a valid ORACLE_SID on `hostname`." | /bin/mailx -s "ERROR - Terminate inactive session on `hostname`" cwopsdba@cisco.com
    usage
    exit 2
  else
    export ORACLE_SID=$1
  fi
else
  # more than 0 or 1 parameter passed
  echo "More than 0 or 1 parameter passed."
-echo "ERROR(3) - No valid argument passed." | /bin/mailx -s "ERROR - Terminate inactive session on `hostname`" cwopsdba@cisco.com
  echo "ERROR(3) - No valid argument passed." | /bin/mailx -s "ERROR - Terminate inactive session on `hostname`" cwopsdba@cisco.com
  usage
  exit 3
fi

export BIN_DIR=/u00/app/admin/dbarea/bin
export SQL_DIR=/u00/app/admin/dbarea/sql
export LOG_DIR=/u00/app/admin/dbarea/log
##export ORACLE_HOME=/u00/app/oracle/product/10.2.0/db
#export ORACLE_HOME=/u00/app/11.2.0/grid
export ORACLE_HOME=/u00/app/oracle/product/11.2.0/db
export PATH=$ORACLE_HOME/bin:$PATH

$ORACLE_HOME/bin/sqlplus -S /nolog << EOSQL
conn as sysdba
/
set lines 80 pages 0
set feedback off
col username for a25
col "Minutes Inactive" for 999,999.99
spool $SQL_DIR/kill_session.log
--select name from v\$database ;
--SELECT s.sid, s.serial#, p.spid, s.username, to_char(s.logon_time, 'mm/dd/yyyy hh24:mi:ss') logon_time, (s.last_call_et / 60) "Minutes Inactive"
--FROM v\$session s, v\$process p
--WHERE s.username IS NOT NULL AND s.paddr = p.addr AND (s.last_call_et / 60) > 1440 AND s.status = 'INACTIVE' AND s.username = 'TEST';

SELECT '!kill -9 '||p.spid||'  |alter system kill session '''||s.sid||', '||s.serial#||'''; '
FROM v\$session s, v\$process p
WHERE s.paddr = p.addr AND (s.last_call_et / 60) > 1440 AND s.status = 'INACTIVE' AND s.username = 'TEST'
;
spool off
exit
EOSQL

if [ -s $SQL_DIR/kill_session.log ]
then

#echo "file exist with >0 bytes"

  echo "spool $LOG_DIR/kill_inactive_sessions.log" > $SQL_DIR/kill_session.sql
  echo "" >> $SQL_DIR/kill_session.sql
  _iCnt=0
  while read _line
  do
    _iCnt=`expr $_iCnt + 1`
    _kill=`echo $_line|cut -d"|" -f1`
    _sql=`echo $_line|cut -d"|" -f2`
    echo $_sql  >> $SQL_DIR/kill_session.sql
    echo $_kill >> $SQL_DIR/kill_session.sql
    echo ""     >> $SQL_DIR/kill_session.sql
  done < $SQL_DIR/kill_session.log
  echo "spool off" >> $SQL_DIR/kill_session.sql
echo "Total Sessions to terminate: $_iCnt" > $LOG_DIR/kill_session_email.txt

#cat $SQL_DIR/kill_session.sql

$ORACLE_HOME/bin/sqlplus -S /nolog << EOSQL1
conn as sysdba
/
set feedback on
set echo on
set termout on
set head off
@$SQL_DIR/kill_session.sql

set feedback off

spool $LOG_DIR/session_cnt.txt
select 'Total Sessions still to be terminated: ' || count(1)
FROM v\$session s
WHERE (s.last_call_et / 60) > 1440 AND s.status = 'INACTIVE' AND s.username = 'TEST'
;
spool off

exit
EOSQL1
cat $LOG_DIR/session_cnt.txt >>  $LOG_DIR/kill_session_email.txt

  #/bin/mailx -s "Terminate inactive sessions on `hostname` -- log file." cwopsdba@cisco.com < $LOG_DIR/kill_inactive_sessions.log

  /bin/mailx -s "Terminate inactive sessions on `hostname`" cwopsdba@cisco.com < $LOG_DIR/kill_session_email.txt
  #/bin/mailx -s "Terminate inactive sessions on `hostname`" cwopsdba@cisco.com < $LOG_DIR/kill_session_email.txt
fi

exit 0
